<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <p id="demo"></p>

    <script>
      //Do the below programs in anonymous function & IIFE
      // 1a Print odd numbers in an array
      let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
      let oddNumber = [];
      //anonymous function
      let printOdd = function (arr) {
        for (let i = 0; i < arr.length; i++) {
          if (arr[i] % 2 !== 0) {
            oddNumber.push(arr[i]);
          }
        }
        console.log("Anonymousodd:", oddNumber);
      };
      printOdd(arr);

      // IIFE Function
      let iifeOddNumber = [];
      (function (arr) {
        for (let i = 0; i < arr.length; i++) {
          if (arr[i] % 2 !== 0) {
            iifeOddNumber.push(arr[i]);
          }
        }
        console.log("iifeOdd:", iifeOddNumber);
      })(arr);

      //Do the below programs in anonymous function & IIFE
      // 1b Convert all the strings to title caps in a string array

      //anonymous function
      let stringArray = ["hello", "world", "javascript", "html"];
      let pushAnonymousStringArray = [];
      let convertStringArray = function (string) {
        for (let i = 0; i < string.length; i++) {
          string[i] = string[i].charAt(0).toUpperCase() + string[i].slice(1);
          pushAnonymousStringArray.push(string[i]);
        }
        console.log("AnonymousStringArray:", pushAnonymousStringArray);
      };
      convertStringArray(stringArray);

      // IIFE Function
      let iifeStringArray = ["hello", "world", "javascript", "html"];
      let pushIIFEStringArray = [];
      (function (string) {
        for (let i = 0; i < string.length; i++) {
          string[i] = string[i].charAt(0).toUpperCase() + string[i].slice(1);
          pushIIFEStringArray.push(string[i]);
        }
        console.log("pushIIFEStringArray:", pushIIFEStringArray);
      })(iifeStringArray);

      //Do the below programs in anonymous function & IIFE
      // 1c Sum of all numbers in an array

      //anonymous function
      let sumArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
      let sum = 0;
      let addSumArray = function (addingNumber) {
        for (let i = 0; i < sumArray.length; i++) {
          sum += sumArray[i];
        }
        return sum;
      };

      const add = addSumArray(sumArray);
      console.log(add);

      // iife function
      let sums = 0;
      (function (add) {
        for (let i = 0; i < add.length; i++) {
          sums += add[i];
        }
      })(sumArray);

      console.log(sums);

      //Do the below programs in anonymous function & IIFE
      // 1d Sum of all numbers in an array

      //anonymous function
      let primeNumbers = [
        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
      ];

      let findPrimes = function (number) {
        let prime = [];

        for (let nums of number) {
          if (nums <= 1) continue;
          let isPrime = true;
          for (let i = 2; i <= Math.sqrt(nums); i++) {
            if (nums % i === 0) {
              isPrime = false;
              break;
            }
          }

          if (isPrime) {
            prime.push(nums);
          }
        }
        return prime;
      };
      console.log(findPrimes(primeNumbers));

      // iife function

      let primeNumberValue = (function (number) {
        let prime = [];
        for (let nums of number) {
          if (nums <= 1) continue;
          let isPrime = true;
          for (let i = 2; i <= Math.sqrt(nums); i++) {
            if (nums % i === 0) {
              isPrime = false;
              break;
            }
          }
          if (isPrime) {
            prime.push(nums);
          }
        }
        return prime;
      })(primeNumbers);

      console.log(primeNumberValue);

      //Do the below programs in anonymous function & IIFE
      // 1e Return all the palindromes in an array

      //anonymous function

      let words = ["level", "hello", "racecar", "world", "madam"];

      let findPalindrome = function (word) {
        let palindromeWords = [];
        for (let data of word) {
          if (data === data.split("").reverse().join("")) {
            palindromeWords.push(data);
          }
        }
        return palindromeWords;
      };

      const resultPalindrome = findPalindrome(words);
      console.log(resultPalindrome);

      //iife function

      let returnPalindrom = (function (words) {
        let palindromeWords = [];
        for (let data of words) {
          if (data === data.split("").reverse().join("")) {
            palindromeWords.push(data);
          }
        }
        return palindromeWords;
      })(words);
      console.log(returnPalindrom);

      //Do the below programs in anonymous function & IIFE
      // 1f Return median of two sorted arrays of the same size

      //anonymous function

      let array1 = [1, 3, 5, 7, 9];
      let array2 = [2, 4, 6, 8, 10];

      let findMedian = function (arr1, arr2) {
        let mergedArray = arr1.concat(arr2).sort((a, b) => a - b);
        let length = mergedArray.length;
        let midIndex = Math.floor(length / 2);

        if (length % 2 === 0) {
          return (mergedArray[midIndex - 1] + mergedArray[midIndex]) / 2;
        } else {
          return mergedArray[midIndex];
        }
      };

      console.log(findMedian(array1, array2));

      //iife
      let findMediaIndex = (function (arr1, arr2) {
        const mergedArray = arr1.concat(arr2).sort((a, b) => a - b);
        const length = mergedArray.length;
        let midIndex = Math.floor(length / 2);

        if (length % 2 === 0) {
          return (mergedArray[midIndex - 1] + mergedArray[midIndex]) / 2;
        } else {
          return mergedArray[midIndex];
        }
      })(array1, array2);
      console.log(findMediaIndex);

      //Do the below programs in anonymous function & IIFE
      // 1g Remove duplicates from an array

      //anonymous function
      let duplicateArray = [1, 2, 2, 3, 4, 4, 5];

      let removeDuplicateArray = function (array) {
        let uniqueElement = [];

        for (let i = 0; i < array.length; i++) {
          if (uniqueElement.indexOf(array[i]) === -1) {
            uniqueElement.push(array[i]);
          }
        }

        return uniqueElement;
      };

      const removeDuplicateArries = removeDuplicateArray(duplicateArray);
      console.log(removeDuplicateArries);

      // iife
      let removeDuplicateArraies = (function (arr) {
        let uniqueElement = [];

        for (let i = 0; i < arr.length; i++) {
          if (uniqueElement.indexOf(arr[i]) === -1) {
            uniqueElement.push(arr[i]);
          }
        }
        return uniqueElement;
      })(duplicateArray);

      console.log(removeDuplicateArraies);

      //Do the below programs in anonymous function & IIFE
      // 1h Rotate an array by k times

      //anonymous function
      let unrotatedArray = [1, 2, 3, 4, 5];
      let rotations = 3;

      let rotatedArray = function (arr, k) {
        let n = arr.length;
        k = k % n;
        let rotatedArraies = arr.slice(n - k).concat(arr.slice(0, n - k));
        return rotatedArraies;
      };

      const resultRotatedArray = rotatedArray(unrotatedArray, rotations);
      console.log(resultRotatedArray);

      //iife

      let iifeRotatedArray = (function (arr, k) {
        let n = arr.length;
        k = k % n;
        let rotatedArraies = arr.slice(n - k).concat(arr.slice(0, n - k));
        return rotatedArraies;
      })(unrotatedArray, rotations);

      console.log(iifeRotatedArray);

      // 2a arrow functions odd numbers

      let arrowOddNumbers = (arr) => {
        let addOddNumbers = [];
        for (let i = 0; i < arr.length; i++) {
          if (arr[i] % 2 !== 0) {
            addOddNumbers.push(arr[i]);
          }
        }
        return addOddNumbers;
      };

      const arrowOddNumber = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
      const printOddNumber = arrowOddNumbers(arrowOddNumber);

      console.log(printOddNumber);

      // 2b arrow Convert all the strings to title caps in a string array
      let stringArrowArray = ["hello", "world", "javascript", "html"];

      let caps = (arr) => {
        let capString = [];
        for (let i = 0; i < arr.length; i++) {
          arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);
          capString.push(arr[i]);
        }

        return capString;
      };

      let capitalStringArray = caps(stringArrowArray);
      console.log(capitalStringArray);

      // 2c Sum of all numbers in an array

      const adders = [1, 2, 3, 4, 5, 6, 7, 8];
      let summed = 0;
      let arrowAdd = (addArray) => {
        for (let i = 0; i < addArray.length; i++) {
          summed += addArray[i];
        }
        return summed;
      };
      const arrowedSum = arrowAdd(adders);
      console.log(arrowedSum);

      // 2 d Return all the prime numbers in an array

      const primeArrowNumber = (arr) => {
        let prime = [];

        for (let add of arr) {
          if (add <= 1) continue;
          let isPrime = true;
          for (let i = 2; i < Math.sqrt(add); i++) {
            if (add % 2 === 0) {
              isPrime = false;
              break;
            }
          }

          if (isPrime) {
            prime.push(add);
          }
        }

        return prime;
      };

      const primesNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];
      const resultPrimeNumbers = primeArrowNumber(primesNumbers);

      console.log(resultPrimeNumbers);

      // 2 e Return all the palindromes in an array
      let arrowWords = ["level", "hello", "racecar", "world", "madam"];

      let arrowsPalindromes = (words) => {
        let plaindrome = [];
        for (let data of words) {
          if (data === data.split("").reverse().join("")) {
            plaindrome.push(data);
          }
        }
        return plaindrome;
      };
      let resultArrowWords = arrowsPalindromes(arrowWords);
      console.log(resultArrowWords);
    </script>
  </body>
</html>
